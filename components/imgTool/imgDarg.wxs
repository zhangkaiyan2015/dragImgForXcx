var height = 0; // 小张图片的高度
var width = 0; // 小张图片的宽度
var baseHeight = 0; // 当前选中item的高度
var baseWidth = 0; // 当前选中item的宽度
// 本容器位置信息
var top = 0;
var left = 0;
var right = 0;
var bottom = 0;
var columns = 3; // 总共几列
var rows = 3; //总共几行
var selectKey = 0; //当前选中的item
var x = 0;
var y = 0;
var isDrag = false; // 是否能进行拖动
var timer = null;

function _getIndex(clientX, clientY) {
    var start_x = Math.round(clientX / width);
    var start_y = Math.round(clientY / height);
    var index = columns * start_y + start_x;
    if (start_x <= 1 && start_y <= 1) {
        index = 0;
    } else if (start_x == 2 && start_y == 0) {
        index = 1
    } else if (start_x == 2 && start_y == 1) {
        index = 2
    } else {
        index = index - 3
    }
    return index;
}

function setViewBasePosition(event, ownerInstance) {
    // ownerInstance.callMethod('click',event)
    timer = ownerInstance.setTimeout(function () {
        if (isDrag) return;
        isDrag = true;
        ownerInstance.callMethod('disabledMethod')
        setViewBasePosition(event, ownerInstance);
    }, 300)
    var parentTagPosition = ownerInstance.selectComponent('#imgView').getBoundingClientRect();
    var dataset = ownerInstance.selectComponent('#imgView').getDataset();
    top = parentTagPosition.top;
    bottom = parentTagPosition.bottom;
    left = parentTagPosition.left;
    right = parentTagPosition.right;

    selectKey = dataset.key;
    var currentId = event.currentTarget.id;
    var currentTag = ownerInstance.selectComponent('#' + currentId)
    var imgtag = currentTag.getBoundingClientRect()
    var touchX = event.touches[0].clientX - left;
    var touchY = event.touches[0].clientY - top;
    var clientX = touchX - width / 2;
    var clientY = touchY - height / 2;
    if (clientX <= 0) clientX = 0;
    if (clientY <= 0) clientY = 0;
    baseHeight = imgtag.height;
    baseWidth = imgtag.width;
    if (currentId == 'img-0') {
        if (height == 0) height = baseHeight / 2;
        if (width == 0) width = baseWidth / 2
    } else {
        height = baseHeight;
        width = baseWidth
    }
    clientX = touchX - width / 2;
    clientY = touchY - height / 2;
    if (clientX <= 0) clientX = 0;
    if (clientY <= 0) clientY = 0;
    if (clientX >= right) clientX = right;
    if (touchY + height / 2 + top >= bottom) clientY = bottom - height - top;
    if (touchX + width / 2 + left >= right) clientX = right - width - left;

    ownerInstance.callMethod('setIndex', {
        index: _getIndex(clientX, clientY),
        selectKey: selectKey
    })
    if (!isDrag) {
        tempInstance = ownerInstance;
        tempEvent = event;
        return;
    }

    currentTag.setStyle({
        transform: 'translate3d(' + clientX + 'px, ' + clientY + 'px, 0)',
        'z-index': '1',
        height: height + 'px',
        width: width + 'px',
    })
}

function getViewPositon(event, ownerInstance) {
    var currentId = event.currentTarget.id
    var currentTag = ownerInstance.selectComponent('#' + currentId)
    var touchX = event.touches[0].clientX - left;
    var touchY = event.touches[0].clientY - top;
    var clientX = touchX - width / 2;
    var clientY = touchY - height / 2;
    //  限制边界
    if (clientX <= 0) clientX = 0;
    if (clientY <= 0) clientY = 0;
    if (clientX >= right) clientX = right;
    if (touchY + height / 2 + top >= bottom) clientY = bottom - height - top;
    if (touchX + width / 2 + left >= right) clientX = right - width - left;
    if (!isDrag) {
        return;
    }
    ownerInstance.callMethod('changeIndex', {
        index: _getIndex(clientX, clientY)
    })
    currentTag.setStyle({
        transform: 'translate3d(' + clientX + 'px, ' + clientY + 'px, 0)',
        'z-index': '1',
        height: height + 'px',
        width: width + 'px',
    })
}

function setViewPosition(event, ownerInstance) {
    ownerInstance.clearTimeout(timer)
    if (!isDrag) {
        return;
    }
    ownerInstance.callMethod('abledMethod')
    isDrag = false;
    ownerInstance.setTimeout(function () {
        var sort = event.currentTarget.dataset.key;
        setStyle(sort, sort, ownerInstance, ownerInstance)
    }, 0)
}

function setStyle(sort, oldValue, ownerInstance, instance) {
    if (sort == undefined || sort == 'undefined') return;
    var tag = ownerInstance.selectComponent('#img-' + sort);
    var style = '';
    if (sort == 0) {
        style = 'transform:translate3d(0%, 0%, 0);width:66.6%;height:420rpx;transition: all 0.3s';
    } else {
        if (sort == 1) {
            x = 200
            y = 0
        } else if (sort == 2) {
            x = 200
            y = 100
        } else {
            x = 100 * (sort - 3) * (rows - 2)
            y = 200
        }
        style = 'transform:translate3d(' + x + '%, ' + y + '%, 0);width:33.3%;height:212rpx;transition: all 0.3s';
    }
    tag.setStyle(style)

}
module.exports = {
    getViewPositon: getViewPositon,
    setViewPosition: setViewPosition,
    setViewBasePosition: setViewBasePosition,
    setStyle: setStyle
}